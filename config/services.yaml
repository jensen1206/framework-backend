# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  timezone: '%env(APP_TIMEZONE)%'
  locale: 'de_DE'
  default_uri: '%router.request_context.scheme%://%router.request_context.host%'
  #default_uri: '%env(resolve:SITE_BASE_URL)%'
  projectDir: '%kernel.project_dir%'
  publicPath: '%kernel.project_dir%/public/'
  uploadsDir: '%kernel.project_dir%/public/uploads/'
  fontsDir: '%kernel.project_dir%/src/Service/Fonts/'
  uploads_chunks: '%kernel.project_dir%/public/uploads/chunks/'
  uploads_dir_name: 'uploads'
  category_name: '%env(APP_CATEGORY_NAME)%'
  post_category_name: '%env(APP_POST_CATEGORY_NAME)%'
  #uploads_base_url: '%router.request_context.scheme%://%router.request_context.host%/%uploads_dir_name%'
  uploads_base_url: '%env(resolve:SITE_BASE_URL)%/%uploads_dir_name%'
services:
  app.listener.compression:
    class: App\EventListener\CompressionSubscriber
    arguments:
    tags:
      - { name: kernel.event_subscriber }

  Twig\Extension\StringLoaderExtension:

  Gedmo\Tree\TreeListener:
    tags:
      - name: doctrine.event_subscriber
        connection: default
    calls:
      - [ setAnnotationReader, [ "@annotation_reader" ] ]
  # default configuration for services in *this* file


  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    bind:
      $app_version: '%env(APP_VERSION)%'
      $category_name: '%env(APP_CATEGORY_NAME)%'
      $post_category_name: '%env(APP_POST_CATEGORY_NAME)%'
      $backupPath: '%kernel.project_dir%/var/uploads/backups/'
      $appInstallPath: '%kernel.project_dir%/install/'
      $appInstallSource: '%kernel.project_dir%/src/Service/install/install.zip'
      $appInstallSourceDir: '%kernel.project_dir%/src/Service/install/'
      $uploadsPath: '%kernel.project_dir%/public/uploads/'
      $uploads_chunks: '%kernel.project_dir%/public/uploads/chunks/'
      $publicPath: '%kernel.project_dir%/public/'
      $emailTemplatePath: '%kernel.project_dir%/src/templates/email_template/'
      $fontServicePath: '%kernel.project_dir%/src/Service/Fonts/'
      $projectDir: '%kernel.project_dir%'
      $archiveDir: '%kernel.project_dir%/var/archive/'
      $uploadsPrivatePath: '%kernel.project_dir%/var/uploads/'
      $uploadedAssetsBaseUrl: '%uploads_base_url%'
      $privateUploadsFilesystem: '@oneup_flysystem.private_uploads_filesystem_filesystem'
      $publicUploadsFilesystem: '@oneup_flysystem.public_uploads_filesystem_filesystem'
      $siteName: '%env(APP_SITE_NAME)%'
      $baseUrl: '%router.request_context.scheme%://%router.request_context.host%'
      #$baseUrl: '%env(resolve:SITE_BASE_URL)%'
      $uploadsDirName: 'uploads'
      $fontsDir: '%kernel.project_dir%/src/Service/Fonts/'
      $envVarDir: '%kernel.project_dir%/var/'
      $configDir: '%kernel.project_dir%/config/'
  App\Ajax\BackupAjaxCall:
    arguments:
      - '@doctrine.orm.entity_manager'

  # App\Cron\RocketsCron:
  #   tags:
  #     - { name: okvpn.cron, cron: '0 0 * * *' }
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name

  League\Bundle\OAuth2ServerBundle\Entity\AccessToken:
    class: App\Entity\AccessToken
  League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface:
    class: App\Repository\AccessTokenRepository
    decorates: 'League\Bundle\OAuth2ServerBundle\Repository\AccessTokenRepository'

  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  #App\Command\:
  #  resource: '../src/Command'
  #  lazy: false

  App\Extension\CurrentCollectionExtension:
    tags:
      - { name: api_platform.collection_extension, priority: 100 }

  App\Filter\SearchFilter:
    class: 'App\Filter\SearchFilter'
    autowire: true
    tags: [ { name: 'api_platform.filter', id: 'search' } ]

  Symfony\Component\Asset\Context\RequestStackContext: '@assets.context'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
sonata_seo:
  encoding: UTF-8
  page:
    title: 'Rockets App'
    #title_prefix:  'LuckyFitness.de'
    #title_suffix:  'LuckyFitness.de'

    default: 'sonata.seo.page.default'
    #separator: ' – '
    metas:
      name:
        #keywords: foo bar
        description: Symfony Standard Framework
        robots: index, follow
        viewport: width=device-width, initial-scale=1
      property:
        # Facebook application settings
        #'fb:app_id':          XXXXXX
        #'fb:admins':          admin1, admin2

        # Open Graph information
        # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
        #og:site_name: LuckyFitness.de
        #og:description: Mit nur einem Abo alle Studios nutzen. Erreiche deine persönlichen Ziele und werde auch du jetzt Lucky. Jetzt starten und Lucky werden.
        #og:type: website
        og:locale: de_DE
        #og:title: LuckyFitness.de aus der Region für die Region. Fitness für alle.
      http-equiv:
        #'Content-Type': text/html; charset=utf-8
        'Content-Type': text/html; charset=UTF-8; X-Content-Type-Options=nosniff
        #'X-Ua-Compatible':      IE=EmulateIE7

      charset:
        UTF-8: ''

      head:
        'xmlns': https://www.w3.org/1999/xhtml
        'xmlns:og': https://opengraphprotocol.org/schema/
        #'xmlns:fb': "http://www.facebook.com/2008/fbml"
